name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: prebuild
        run: pnpm install --frozen-lockfile

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm update:version
          commit: "chore: release ai-craftsman"
          title: "chore: release ai-craftsman"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Get latest release
        id: latest_release
        uses: actions/github-script@v6
        with:
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            return release.data.tag_name;

      - name: Get version from package.json
        run: echo "PACKAGE_VERSION=$(jq -r '.version' packages/ai-craftsman/package.json)" >> $GITHUB_ENV

      - name: Check if PACKAGE_VERSION matches the latest tag
        run: |
          if [ "$PACKAGE_VERSION" == "$LATEST_TAG" ]; then
            echo "Package version and latest tag match! Stopping the workflow."
            exit 0
          else
            echo "Package version and latest tag do not match. Continuing the workflow."
          fi
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
          LATEST_TAG: ${{ steps.latest_release.outputs.result }}

      - name: Build
        run: cd packages/ai-craftsman && pnpm build

      - name: Zip output
        run: |
          git clean -xdf
          pnpm install --frozen-lockfile --prod
          zip -r release ./

      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.PACKAGE_VERSION }}
          name: Release ${{ env.PACKAGE_VERSION }}
          body: "Please see the [CHANGELOG](./CHANGELOG.md) for details."
          artifacts: "release.zip"
