name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  createReleasePr:
    name: Create release PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: prebuild
        run: pnpm install --frozen-lockfile

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm update:version
          commit: "chore: release ai-reivew-flex"
          title: "chore: release ai-reivew-flex"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Get Latest tag
        id: getLatestTag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0

      - name: Get version from package.json
        run: echo "PACKAGE_VERSION=$(jq -r '.version' packages/ai-reivew-flex/package.json)" >> $GITHUB_ENV

      - name: Check if PACKAGE_VERSION matches the latest tag
        run: |
          if [ "$PACKAGE_VERSION" == "$LATEST_TAG" ]; then
            echo "Package version and latest tag match! Stopping the workflow."
            echo "SHOULD_SKIP=true" >> $GITHUB_ENV
          else
            echo "Package version and latest tag do not match. Continuing the workflow."
            echo "SHOULD_SKIP=false" >> $GITHUB_ENV
          fi
        env:
          PACKAGE_VERSION: v${{ env.PACKAGE_VERSION }}
          LATEST_TAG: ${{ steps.getLatestTag.outputs.tag }}

      - name: Install dependencies
        if: env.SHOULD_SKIP == 'false'
        run: pnpm install --frozen-lockfile

      - name: Build
        if: env.SHOULD_SKIP == 'false'
        run: cd packages/ai-reivew-flex && pnpm build

      - name: Zip output
        if: env.SHOULD_SKIP == 'false'
        run: zip -r release ./

      - uses: ncipollo/release-action@v1
        if: env.SHOULD_SKIP == 'false'
        with:
          tag: v${{ env.PACKAGE_VERSION }}
          name: Release v${{ env.PACKAGE_VERSION }}
          body: "Please see the [CHANGELOG](./packages/ai-reivew-flex/CHANGELOG.md) for details."
          artifacts: "release.zip"
          skipIfReleaseExists: true

      - name: Extract major version
        if: env.SHOULD_SKIP == 'false'
        run: echo "MAJOR_VERSION=v$(echo $PACKAGE_VERSION | cut -d '.' -f 1)" >> $GITHUB_ENV

      - name: Extract major version
        if: env.SHOULD_SKIP == 'false'
        run: echo "IS_V0=$( [ "${{ env.MAJOR_VERSION }}" = "v0" ] && echo "true" || echo "false" )" >> $GITHUB_ENV

      - uses: ncipollo/release-action@v1
        if: env.SHOULD_SKIP == 'false'
        with:
          tag: ${{ env.MAJOR_VERSION }}
          name: Release ${{ env.MAJOR_VERSION }}
          body: "Please see the [CHANGELOG](./packages/ai-reivew-flex/CHANGELOG.md) for details."
          artifacts: "release.zip"
          allowUpdates: true
          prerelease: ${{ env.IS_V0 }}
